pipeline{
    agent any 
    stages{
        stage('SCM checkout'){
            steps{
               git 'https://github.com/PradipRandive/maven-project.git' 
            }
        }
        stage('mvn validate'){
            steps{
               withMaven(globalMavenSettingsConfig: '', jdk: 'JAVA_HOME', maven: 'MAVEN_HOME', mavenSettingsConfig: '', traceability: true) {
                 sh 'mvn validate'
                } 
            }
        }
        stage('mvn compile'){
            steps{
               withMaven(globalMavenSettingsConfig: '', jdk: 'JAVA_HOME', maven: 'MAVEN_HOME', mavenSettingsConfig: '', traceability: true) {
                 sh 'mvn compile'
                } 
            }
        }
        stage('mvn package'){
            steps{
               withMaven(globalMavenSettingsConfig: '', jdk: 'JAVA_HOME', maven: 'MAVEN_HOME', mavenSettingsConfig: '', traceability: true) {
                 sh 'mvn package'
                } 
            }
        }
       // stage('deploy the code'){
           // steps{
             //  sshagent(['Tomcat_Server']) {
                // sh 'scp -o StrictHostKeyChecking=no webapp/target/webapp.war ec2-user@10.0.1.100:/usr/share/tomcat/webapps' 
           // }
       // }
       //}  
    
     //stage('copy artifact on docker'){
           // steps{
               sshPublisher(publishers: [sshPublisherDesc(configName: 'docker_server', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: 'home/dockeradmin', remoteDirectorySDF: false, removePrefix: 'webapp/target/', sourceFiles: 'webapp/target/webapp.war')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
           // } 
   //}
    }
    stage('deploy artifact on continer'){
        steps{
            sshPublisher(publishers: [sshPublisherDesc(configName: 'docker_server', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: '', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '/opt/docker', remoteDirectorySDF: false, removePrefix: 'webapp/target/', sourceFiles: 'webapp/target/webapp.war')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
        }
    }
}